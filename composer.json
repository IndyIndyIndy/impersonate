{
    "name": "christianessl/impersonate",
    "description": "Impersonate frontend users from inside the TYPO3 Backend.",
    "license": "GPL-2.0-or-later",
    "type": "typo3-cms-extension",
    "keywords": [
        "TYPO3",
        "extension"
    ],
    "authors": [
        {
            "name": "Christian Essl",
            "role": "Developer"
        },
        {
            "name": "Axel BÃ¶swetter",
            "role": "Developer"
        }
    ],
    "homepage": "https://christianessl.at",
    "require": {
        "typo3/cms-backend": "^12.4",
        "typo3/cms-frontend": "^12.4",
        "typo3/cms-extbase": "^12.4"
    },
    "require-dev": {
        "ergebnis/composer-normalize": "^2.30",
        "friendsofphp/php-cs-fixer": "^3.14",
        "helmich/typo3-typoscript-lint": "^3.1",
        "php-coveralls/php-coveralls": "^2.5",
        "phpstan/phpstan": "^1.10",
        "seld/jsonlint": "^1.9",
        "ssch/typo3-rector": "^v2.13",
        "typo3/coding-standards": "^0.7"
    },
    "replace": {
        "typo3-ter/impersonate": "self.version"
    },
    "autoload": {
        "psr-4": {
            "ChristianEssl\\Impersonate\\": "Classes"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "ChristianEssl\\Impersonate\\Tests\\": "Tests"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "typo3/class-alias-loader": true,
            "typo3/cms-composer-installers": true
        },
        "bin-dir": ".Build/bin",
        "vendor-dir": ".Build/vendor"
    },
    "extra": {
        "typo3/cms": {
            "app-dir": ".Build",
            "cms-package-dir": "{$vendor-dir}/typo3/cms",
            "extension-key": "impersonate",
            "web-dir": ".Build/public"
        }
    },
    "scripts": {
        "ci": [
            "@ci:static"
        ],
        "ci:composer:normalize": "@composer normalize --no-check-lock --dry-run",
        "ci:composer:psr-verify": "@composer dumpautoload --optimize --strict-psr",
        "ci:json:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -name '*.json' | xargs -r php .Build/bin/jsonlint -q",
        "ci:php": [
            "@ci:php:cs-fixer",
            "@ci:php:lint",
            "@ci:php:sniff",
            "@ci:php:stan"
        ],
        "ci:php:cs-fixer": "./.Build/bin/php-cs-fixer fix --config ./Build/php-cs-fixer.php -v --dry-run --using-cache no --diff",
        "ci:php:lint": "find .*.php *.php Classes Configuration Tests -name '*.php' -print0 | xargs -r -0 -n 1 -P 4 php -l",
        "ci:php:rector": "./.Build/bin/rector process --ansi --config ./Build/rector.php --dry-run --no-progress-bar",
        "ci:php:stan": "./.Build/bin/phpstan analyse -c ./Build/phpstan.neon --no-progress",
        "ci:static": [
            "@ci:json:lint",
            "@ci:php:cs-fixer",
            "@ci:php:lint",
            "@ci:php:stan",
            "@ci:ts:lint",
            "@ci:yaml:lint"
        ],
        "ci:ts:lint": "./.Build/bin/typoscript-lint -c ./Build/typoscript-lint.yaml --ansi -n --fail-on-warnings -vvv Configuration/TypoScript",
        "ci:yaml:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -regextype egrep -regex '.*.ya?ml$' | xargs -r php ./.Build/bin/yaml-lint",
        "fix:php": [
            "@fix:php:cs"
        ],
        "fix:php:cs": "./.Build/bin/php-cs-fixer fix --config ./Build/php-cs-fixer.php"
    },
    "scripts-descriptions": {
        "ci": "Runs all dynamic and static code checks.",
        "ci:composer:normalize": "Checks the composer.json.",
        "ci:composer:psr-verify": "Verifies PSR-4 namespace correctness.",
        "ci:json:lint": "Lints the JSON files.",
        "ci:php": "Runs all static checks for the PHP files.",
        "ci:php:copypaste": "Checks for copy'n'pasted PHP code.",
        "ci:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
        "ci:php:lint": "Lints the PHP files for syntax errors.",
        "ci:php:stan": "Checks the PHP types using PHPStan.",
        "ci:static": "Runs all static code checks (syntax, style, types).",
        "ci:ts:lint": "Lints the TypoScript files.",
        "ci:yaml:lint": "Lints the YAML files.",
        "fix:php": "Runs all fixers for the PHP code.",
        "fix:php:cs": "Fixes the code style with PHP-CS-Fixer."
    }
}
